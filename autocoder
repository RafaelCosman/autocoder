#!/usr/bin/env python3

import os
import sys
import openai

ENGINE = 'text-davinci-003'
MAX_TOKENS = 1500
TEMPERATURE = 0.3
def complete(prompt):
    completion = openai.Completion.create(
        engine=ENGINE,
        prompt=prompt,
        max_tokens=MAX_TOKENS,
        temperature=TEMPERATURE,
        stop=['================'],
        stream=False,
    )

    return completion['choices'][0]['text']

def get_all_files():
    # Get list of all files in the current directory
    files = os.listdir('.')
    all_files_appended = ""

    # Iterate through each file
    for file in files:
        # Open and read the file
        if os.path.isfile(file):
            with open(file) as fp:
                # Print the contents of the file

                all_files_appended += "\n================\n"
                all_files_appended += file
                all_files_appended += "\n================\n"
                all_files_appended += fp.read()
                all_files_appended += "\n"

    return all_files_appended

all_files_appended = get_all_files()

input_from_user = sys.argv[1]

prompt = f"""You are an experienced Python programmer.

You are working in a directory with the following contents:

{all_files_appended}

Your goal now is to {input_from_user}.
Make sure to write safe, readable, and commented Python code

================
EXAMPLES
================

Python code to write me a python file called example.py that prints out Hello World!:

# example.py
if __name__ == "__main__":
    print("Hello World!")

Python code to Modify example.py to print it out 10 times:

# example.py
if __name__ == "__main__":
    for i in range(10):
        print("Hello World!")

Python code to please comment example.py:

# example.py
# This file prints out "Hello World!" 10 times

if __name__ == "__main__": # Checks to see if the program is being run directly
    for i in range(10):
        print("Hello World!") # Prints "Hello World!" each time the loop is executed

================
Actual Prompt
================

Python code to {input_from_user}:

"""

print(prompt)

completion = complete(prompt)

print(completion)