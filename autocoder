#!/usr/bin/env python3

import os
import sys
import openai
import subprocess

ENGINE = 'text-davinci-003'
MAX_TOKENS = 1500
TEMPERATURE = 0.0
def complete(prompt):
    completion = openai.Completion.create(
        engine=ENGINE,
        prompt=prompt,
        max_tokens=MAX_TOKENS,
        temperature=TEMPERATURE,
        stream=False,
    )

    return completion['choices'][0]['text']

def get_all_files():
    # Get list of all files in the current directory
    files = os.listdir('.')
    all_files_appended = ""

    # Iterate through each file
    for file in files:
        # Open and read the file
        if os.path.isfile(file):
            with open(file) as fp:
                # Print the contents of the file

                all_files_appended += "\n================\n"
                all_files_appended += file
                all_files_appended += "\n================\n"
                all_files_appended += fp.read()
                all_files_appended += "\n"

    return all_files_appended

all_files_appended = get_all_files()

input_from_user = sys.argv[1]

prompt = f"""You are an experienced programmer that can write safe, readable, and commented code in a variety of languages.

You are working in a directory with the following contents:

{all_files_appended}

Your goal now is to {input_from_user}.
Make sure to write safe, readable, and commented code in an appropriate language based on the goal.


================
EXAMPLES
================

Code to write me a python file called example.py that prints out Hello World!:

# example.py
if __name__ == "__main__":
    print("Hello World!")

Code to Modify example.py to print it out 10 times:

# example.py
if __name__ == "__main__":
    for i in range(10):
        print("Hello World!")

Code to please comment example.py:

# example.py
# This file prints out "Hello World!" 10 times

if __name__ == "__main__": # Checks to see if the program is being run directly
    for i in range(10):
        print("Hello World!") # Prints "Hello World!" each time the loop is executed

Code to please write me a command line tool called autocoder:
# autocoder
#!/usr/bin/env python3

print("Welcome to autocoder!")

Code to go ahead and run the webserver:
```console
python3 webserver.py
```


================
Actual Prompt
================

Code to {input_from_user}:

"""

print(prompt)

completion = complete(prompt).strip()

print(completion)

# Get the file name
filename = completion.split('\n')[0]

if filename == "```console": # This is if it is a console command rather than a file
    commands_to_run = completion.splitlines()[1:-1]
    commands_to_run_as_string = "\n".join(commands_to_run)
    input(f"autocoder would like to run the following commands. Press enter to continue. (to cancel, press control-c)\n\n\033[0;33m{commands_to_run_as_string}\033[0m")
    for command in commands_to_run:
        process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)

        stdout, stderr = process.communicate()

        print('STDOUT:')
        print(stdout.decode())

        print('STDERR:')
        errs = stderr.decode()

        if errs:
            print(f"I got the following error:\n\n{errs} \nLet me see if I can debug it...")

            # Make one attempt to debug the error
else: # If it is an actual file
    filename = filename[2:]

    # Get the contents
    contents = completion[completion.find('\n')+1:]

    # Write the file
    with open(filename, 'w') as f:
        f.write(contents)