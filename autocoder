#!/usr/bin/env python3

import sys
import openai
import subprocess
from prompts import prompt

ENGINE = 'text-davinci-003'
MAX_TOKENS = 1500
TEMPERATURE = 0.0
def complete(prompt):
    completion = openai.Completion.create(
        engine=ENGINE,
        prompt=prompt,
        max_tokens=MAX_TOKENS,
        temperature=TEMPERATURE,
        stream=False,
    )

    return completion['choices'][0]['text']


input_from_user = sys.argv[1]

print(prompt(input_from_user))

completion = complete(prompt(input_from_user)).strip()

print(completion)

# Get the file name
filename = completion.split('\n')[0]

if filename == "```console": # This is if it is a console command rather than a file
    commands_to_run = completion.splitlines()[1:-1]
    commands_to_run_as_string = "\n".join(commands_to_run)
    input(f"autocoder would like to run the following commands. Press enter to continue. (to cancel, press control-c)\n\n\033[0;33m{commands_to_run_as_string}\033[0m")
    for command in commands_to_run:
        process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)

        stdout, stderr = process.communicate()

        print('STDOUT:')
        print(stdout.decode())

        print('STDERR:')
        errs = stderr.decode()

        if errs:
            print(f"I got the following error:\n\n{errs} \nLet me see if I can debug it...")

            # Make one attempt to debug the error
else: # If it is an actual file
    filename = filename[2:]

    # Get the contents
    contents = completion[completion.find('\n')+1:]

    # Write the file
    with open(filename, 'w') as f:
        f.write(contents)